#!/bin/bash
#$ -pe smp 4
#$ -N Ar_2_um
#$ -M jhaase1@nd.edu
#$ -m a
#$ -r y
#$ -t 50-350:5 #Applied voltage in V
#$ -q *@@dgo
###########$ -V

module purge
module load opt_local/1.0 paraview

OldInputFile="Input.i"

oldvhigh=0.10 #Applied voltage in kV
	oldVoltageLine="vhigh = $oldvhigh"

olddom0Size=5 #um
	oldDomainLine="dom0Size = ${olddom0Size}E-6"

gas="Ar"

newdom0Size=2 #um
	newDomainLine="dom0Size = ${newdom0Size}E-6"

newvhigh=${SGE_TASK_ID}
	newVoltageLine="vhigh = ${newvhigh}E-3"

NewInputFile="Input_${gas}_${newdom0Size}_um_${newvhigh}_V.i"
OutputFile="Input_${gas}_${newdom0Size}_um_${newvhigh}_V_out"

####LogFile=$( ls Ar_2_um.o*.$newvhigh )
LogFile="Log_${gas}_${newdom0Size}_um_${newvhigh}_V.txt"

cp ../${OldInputFile} ${NewInputFile}

sed -i "s@${oldVoltageLine}@${newVoltageLine}@g" "${NewInputFile}"
sed -i "s@${oldDomainLine}@${newDomainLine}@g" "${NewInputFile}"

zapdos-opt -i ${NewInputFile} --no-color > ${LogFile}

if [ $(tail -n 1 ${LogFile} | awk 'NR==1{print length($1)}') -ge 100 ]
	then
		echo "${newdom0Size},${newvhigh}" >> ../data.csv

		pvpython ../ToCSV.py "${OutputFile}"

		for file in $( ls ${OutputFile}*0.csv ) ; do
			TempOutputFile=${file//"0.csv"/".txt"}
			mv ${file} ${TempOutputFile}
		done

		rm ${OutputFile}*.csv

		for file in $( ls ${OutputFile}*.txt ) ; do
			NewOutputFile=${file//"_out"/""}
			NewOutputFile=${NewOutputFile//"Input"/"Output"}
			NewOutputFile=${NewOutputFile//".txt"/".csv"}

			mv ${file} ${NewOutputFile}
		done
fi

rm ${OutputFile}.e
